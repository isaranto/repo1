# This is a basic workflow to help you get started with Actions

name: CI
on: issue_comment

jobs:
  test-action:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request }} && ${{ github.event.comment.body }} == '/deploy'
    steps:
      - name: Add comment to PR
        env:
          URL: ${{ github.event.issue.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=`echo "${{ github.head_ref }}"`
          curl \
            -X POST \
            $URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": "\"$VERSION\" http://www.google.com" }'
            
            
      - uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }
            
      - uses: actions/checkout@v2
        with:
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }}
          fetch-depth: 0
      
      - name: Get git describe variant with branch name
        env:
          MY_REF: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }}
        run: |
          BRANCH=`echo ${MY_REF##*/}| cut -c1-40`
          echo $BRANCH
          PRE_RELEASE_VERSION=`echo "$(git describe)" | sed "s/-/-test-chart./"`
          echo "RELEASE_VERSION=$PRE_RELEASE_VERSION" >> $GITHUB_ENV

      - name: Get git describe variant with branch name
        run: |
          echo "${{ env.RELEASE_VERSION }}"
          

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
